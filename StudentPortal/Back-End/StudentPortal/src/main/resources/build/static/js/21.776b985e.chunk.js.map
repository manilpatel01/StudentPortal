{"version":3,"sources":["Components/ForgotPassword/ForgotPassword.js"],"names":["ForgotPasswordForm","reduxForm","form","initialValues","type","validate","values","errors","username","props","UI","loading","success","successMessage","useState","label","setLabel","placeholder","setPlaceholder","forgotPasswordAction","maskEmail","setMaskEmail","useEffect","email","str","finalArr","len","split","indexOf","forEach","item","pos","push","join","onSubmit","a","formData","FormData","Object","keys","field","index","append","className","id","handleSubmit","name","component","selectInput","options","Student","Admin","onChange","e","target","value","console","log","textInput","require","error","class","style","textAlign","connect","state"],"mappings":"yNA6GA,IAeMA,EAAqBC,YAAU,CACnCC,KAAM,iBACNC,cAAe,CAAEC,KAAM,WACvBC,SAlBe,SAACC,GAChB,IAAMC,EAAS,GAOf,OANKD,EAAOF,OACVG,EAAOH,KAAO,sBAEXE,EAAOE,WACVD,EAAOC,SAAW,yBAEbD,IAOkBN,EArH3B,SAAwBQ,GAAQ,IAAD,EACwBA,EAAMC,GAAnDC,EADqB,EACrBA,QAASJ,EADY,EACZA,OAAQK,EADI,EACJA,QAASC,EADL,EACKA,eADL,EAEHC,mBAAS,kBAFN,mBAEtBC,EAFsB,KAEfC,EAFe,OAGSF,mBAAS,+BAHlB,mBAGtBG,EAHsB,KAGTC,EAHS,KAIrBC,EAAyBV,EAAzBU,qBAJqB,EAKKL,mBAAS,MALd,mBAKtBM,EALsB,KAKXC,EALW,KAM7BC,qBAAU,WACR,GAAIT,EAAeU,MAAO,CACxB,IAAIC,EAAMX,EAAeU,MACrBE,EAAW,GAEXC,GADJF,EAAMA,EAAIG,MAAM,KACFC,QAAQ,KACtBJ,EAAIK,SAAQ,SAACC,EAAMC,GACjBA,GAAO,GAAKA,GAAOL,EAAM,EACrBD,EAASO,KAAK,KACdP,EAASO,KAAKR,EAAIO,OAExBV,EAAaI,EAASQ,KAAK,QAE5B,CAACpB,IACJ,IAYMqB,EAAQ,uCAAG,WAAO5B,GAAP,eAAA6B,EAAA,6DACTC,EAAW,IAAIC,SACrBC,OAAOC,KAAKjC,GAAQuB,SAAQ,SAACW,EAAOC,GAClCL,EAASM,OAAOF,EAAOlC,EAAOkC,OAHjB,SAKTrB,EAAqBiB,GALZ,2CAAH,sDAUd,OACE,yBAAKO,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qCACb,0BACEC,GAAG,iBACHD,UAAU,UACVT,SAAUzB,EAAMoC,aAAaX,IAE7B,wBAAIS,UAAU,0BAAd,kBACA,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEG,KAAK,OACL/B,MAAM,QACNE,YAAY,cACZ8B,UAAWC,IACXC,QAAS,CACPC,QAAS,UACTC,MAAO,SAETC,SA1CO,SAACC,GAEP,UADAA,EAAEC,OAAOC,OAEpBrC,EAAe,oBACfF,EAAS,oBAETE,EAAe,+BACfF,EAAS,mBAEXwC,QAAQC,IAAIJ,OAoCJ,yBAAKV,UAAU,cACb,kBAAC,IAAD,CACEvC,KAAK,OACL0C,KAAK,WACL/B,MAAOA,EACPE,YAAaA,EACb8B,UAAWW,IACXC,SAAO,KAGX,yBAAKhB,UAAU,0BACb,4BAAQvC,KAAK,SAASuC,UAAU,mBAAhC,YAIW,IAAZhC,EACC,kBAAC,IAAD,MAEEJ,EAAOqD,OACL,yBAAKC,MAAM,qBAAqBC,MAAO,CAAEC,UAAW,WAApD,sBAKLnD,GACC,yBAAKiD,MAAM,sBAAsBC,MAAO,CAAEC,UAAW,WACnD,uEACClD,EAAeU,OAASH,UA+B1B4C,uBAVS,SAACC,GAAD,MAAY,CAClCvD,GAAIuD,EAAMvD,MAS4B,CAAES,0BAA3B6C,CACbhE","file":"static/js/21.776b985e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Loading from \"../../Util/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { forgotPasswordAction } from \"../../redux/actions/userAction\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { selectInput, textInput } from \"../ReduxForm/form\";\r\n\r\nfunction ForgotPassword(props) {\r\n  const { loading, errors, success, successMessage } = props.UI;\r\n  const [label, setLabel] = useState(\"Enrollment No:\");\r\n  const [placeholder, setPlaceholder] = useState(\"Enter Your Enrollment No...\");\r\n  const { forgotPasswordAction } = props;\r\n  const [maskEmail, setMaskEmail] = useState(null);\r\n  useEffect(() => {\r\n    if (successMessage.email) {\r\n      let str = successMessage.email;\r\n      let finalArr = [];\r\n      str = str.split(\"\");\r\n      let len = str.indexOf(\"@\");\r\n      str.forEach((item, pos) => {\r\n        pos >= 2 && pos <= len - 3\r\n          ? finalArr.push(\"*\")\r\n          : finalArr.push(str[pos]);\r\n      });\r\n      setMaskEmail(finalArr.join(\"\"));\r\n    }\r\n  }, [successMessage]);\r\n  const onRoleChange = (e) => {\r\n    const type = e.target.value;\r\n    if (type === \"ADMIN\") {\r\n      setPlaceholder(\"Enter Your Id...\");\r\n      setLabel(\"Department Id:\");\r\n    } else {\r\n      setPlaceholder(\"Enter Your Enrollment No...\");\r\n      setLabel(\"Enrollment No:\");\r\n    }\r\n    console.log(e);\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    const formData = new FormData();\r\n    Object.keys(values).forEach((field, index) => {\r\n      formData.append(field, values[field]);\r\n    });\r\n    await forgotPasswordAction(formData);\r\n\r\n    // history.pushState('/login')\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-lg-4 mx-auto mx-auto\">\r\n          <form\r\n            id=\"forgotPassword\"\r\n            className=\"regForm\"\r\n            onSubmit={props.handleSubmit(onSubmit)}\r\n          >\r\n            <h2 className=\"form-title text-center\">ForgotPassword</h2>\r\n            <div className=\"form-group\">\r\n              <Field\r\n                name=\"type\"\r\n                label=\"Role:\"\r\n                placeholder=\"Select Role\"\r\n                component={selectInput}\r\n                options={{\r\n                  Student: \"STUDENT\",\r\n                  Admin: \"ADMIN\",\r\n                }}\r\n                onChange={onRoleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"username\"\r\n                label={label}\r\n                placeholder={placeholder}\r\n                component={textInput}\r\n                require\r\n              />\r\n            </div>\r\n            <div className=\"form-group text-center\">\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n            {loading === true ? (\r\n              <Loading />\r\n            ) : (\r\n                errors.error && (\r\n                  <div class=\"alert alert-danger\" style={{ textAlign: \"center\" }}>\r\n                    Username Not Found\r\n                  </div>\r\n                )\r\n              )}\r\n            {success && (\r\n              <div class=\"alert alert-success\" style={{ textAlign: \"center\" }}>\r\n                <p>username and password sent to this email</p>\r\n                {successMessage.email && maskEmail}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.type) {\r\n    errors.type = \"Please Select Role\";\r\n  }\r\n  if (!values.username) {\r\n    errors.username = \"Please Enter Username\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\n\r\nconst ForgotPasswordForm = reduxForm({\r\n  form: \"forgotPassword\",\r\n  initialValues: { type: \"STUDENT\" },\r\n  validate,\r\n})(ForgotPassword);\r\n\r\nexport default connect(mapStateToProps, { forgotPasswordAction })(\r\n  ForgotPasswordForm\r\n);\r\n"],"sourceRoot":""}