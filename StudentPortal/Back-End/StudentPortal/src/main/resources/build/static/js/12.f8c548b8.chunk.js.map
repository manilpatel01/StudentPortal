{"version":3,"sources":["Components/Profile/ModelEditProfile.js","Components/Registration/AdminFormValidate.js","Components/AdminPanel/Update_Student_Admin/update_student_info.js","redux/actions/dataAction.js","Components/Registration/EditAdminForm.js","Components/Registration/ModelEditAdminProfile.js","Components/AdminPanel/Update_Student_Admin/update_admin_info.js","Components/AdminPanel/Update_Student_Admin/update_user_info.js"],"names":["connect","state","UI","updateStudent","props","dispatch","useDispatch","useState","user","setUser","loading","errors","success","useEffect","destroy","handleSubmit","values","a","formData","FormData","Object","keys","forEach","field","index","append","setTimeout","type","document","getElementById","click","class","id","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","isUpdate","onSubmit","error","style","textAlign","validate","ADMIN_FIELDS","fieldName","replace","value","match","nameRegex","emailRegex","contactRegex","passwordRegex","password","addLineRegex","cityRegex","pinRegex","mapActionToProps","getGlobalStudent","enrollment","console","log","SET_INITIALVALUE","SET_GLOBAL_STUDENT_LOADING","axios","get","then","res","data","SET_DATA_STUDENT","student","STOP_GLOBAL_STUDENT_LOADING","catch","err","response","SET_STUDENT_ERROR","payload","Data","studentErrors","studentLoading","setErrors","setLoading","setStudent","setEnrollment","enError","setEnError","fetchStudentSetInForm","e","preventDefault","enrollmentRegex","className","placeholder","onChange","target","dangerouslySetInnerHTML","__html","disabled","Loading","ModelEditProfile","first_name","middle_name","last_name","data-toggle","data-target","message","AdminRegistrationForm","reduxForm","form","onSubmitFail","scrollToFirstError","BRANCH","setBRANCH","onCourseChange","initialValues","course","CLEAR_ERRORS","BRANCH_BE","BRANCH_PDDC","BRANCH_PG","BRANCH_MCA","Field","name","label","component","textInput","require","selectInput","options","GENDER","data-live-search","ADMIN_ROLE","BRANCH_YEAR","COURSE","maxLength","htmlFor","color","COUNTRY","min","max","BLOOD_GROOP","updateGLobalAdmin","LOADING_UI","post","header","getUserData","SET_OPERATION_SUCCESS","SET_ERRORS","getGlobalAdmin","email","SET_GLOBAL_ADMIN_LOADING","SET_DATA_ADMIN","admin","STOP_GLOBAL_ADMIN_LOADING","SET_ADMIN_ERROR","adminErrors","adminLoading","setAdmin","setEmail","emailError","setEmailError","fetchAdminSetInForm","UpdateUserInfo","profile","setProfile"],"mappings":"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","file":"static/js/12.f8c548b8.chunk.js","sourcesContent":["import React, { useEffect ,useState} from 'react'\r\nimport StudentForm from '../Registration/StudentForm'\r\nimport { updateStudent } from '../../redux/actions/userAction'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport {destroy} from 'redux-form'\r\nimport Loading from '../../Util/Loading'\r\n\r\nfunction ModelEditProfile(props) {\r\n    const dispatch = useDispatch();\r\n    const [user, setUser] = useState(props.user)\r\n    const { loading, errors, success } = props.UI\r\n    useEffect(() => {\r\n        return () => {\r\n          dispatch(destroy('StudentForm'));\r\n        };\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        setUser(props.user)\r\n    }, [loading, errors, success,props.user])\r\n    \r\n\r\n    const handleSubmit = async (values) => {\r\n        \r\n\r\n        const formData = new FormData();\r\n        Object.keys(values).forEach((field, index) => {\r\n            formData.append(field, values[field]);\r\n        });\r\n\r\n        await props.updateStudent(formData);\r\n        setTimeout(() => {\r\n            dispatch({ type: \"CLEAR_ERRORS\" })\r\n            document.getElementById('profile-model-close').click()\r\n        }, 3000)\r\n\r\n    };\r\n    return (\r\n\r\n        <div class=\"modal fade\" id=\"edit_profile\"  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edit_profile_title\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h4 class=\"modal-title\" id=\"edit_profile_title\">Edit Profile</h4>\r\n                        <button type=\"button\" id=\"profile-model-close\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <StudentForm isUpdate={true} onSubmit={handleSubmit} user={user}></StudentForm>\r\n                        {loading === true ?\r\n                            <Loading /> :\r\n                            errors.error && (\r\n                                <div class=\"alert alert-danger\"\r\n                                    style={{ textAlign: \"center\" }}\r\n                                >\r\n                                    There's Might Be Some Server Error\r\n                                </div>)\r\n                        }\r\n                        {\r\n                            success &&\r\n                            <div class=\"alert alert-success\"\r\n                                style={{ textAlign: \"center\" }}\r\n                            >\r\n                                Profile Changed SucccesFully\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n});\r\nexport default connect(mapStateToProps, { updateStudent })(ModelEditProfile)","import { ADMIN_FIELDS } from \"./data\";\r\nimport {\r\n  nameRegex,\r\n  emailRegex,\r\n  contactRegex,\r\n  passwordRegex,\r\n  addLineRegex,\r\n  cityRegex,\r\n  pinRegex,\r\n} from \"../ReduxForm/Regex\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n\r\n  ADMIN_FIELDS.forEach((field) => {\r\n    const fieldName = field.replace(/_/g, \" \");\r\n    const value = values[field];\r\n\r\n    if (!value) {\r\n      errors[field] = `${fieldName} is required`;\r\n    } else\r\n      switch (field) {\r\n        case \"first_name\":\r\n        case \"middle_name\":\r\n        case \"last_name\":\r\n          if (!value.match(nameRegex)) {\r\n            errors[field] = `Please enter your valid ${fieldName}.`;\r\n          }\r\n          break;\r\n        case \"email\":\r\n          if (!value.match(emailRegex)) {\r\n            errors[field] = `Please enter your valid ${fieldName}.`;\r\n          }\r\n          break;\r\n        case \"contact\":\r\n          if (!value.match(contactRegex)) {\r\n            errors[field] = `Please enter your valid Mobile Number.`;\r\n          }\r\n          break;\r\n        case \"password\":\r\n          if (!value.match(passwordRegex)) {\r\n            errors[field] = `<div id=\"repassword\">\r\n                            <span>Password must contain the following:</span>\r\n                            <p>A <b>lowercase</b> letter.</p>\r\n                            <p>A <b>UPPERCASE</b> letter.</p>\r\n                            <p>A <b>number (0-9)</b>.</p>\r\n                            <p>A <b>special (!@#$%^&*) characters</b>.</p>\r\n                            <p>Password length between <b>8-32 characters</b>.</p>\r\n                          </div>`;\r\n          }\r\n          break;\r\n        case \"confirm_password\":\r\n          if (value !== values.password) {\r\n            errors[field] = `Password doesn't match.`;\r\n          }\r\n          break;\r\n        case \"re_add_l1\":\r\n        case \"re_add_l2\":\r\n          if (!value.match(addLineRegex)) {\r\n            errors[field] = `Enter valid address line.`;\r\n          }\r\n          break;\r\n        case \"re_add_city\":\r\n        case \"re_add_state\":\r\n          if (!value.match(cityRegex)) {\r\n            errors[field] = `Enter valid name.`;\r\n          }\r\n          break;\r\n        case \"re_add_pin_code\":\r\n          if (!value.match(pinRegex)) {\r\n            errors[field] = `Check your Pin-Code.`;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n  });\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport ModelEditProfile from '../../Profile/ModelEditProfile';\r\n\r\nimport { getGlobalStudent } from '../../../redux/actions/dataAction';\r\nimport { destroy } from 'redux-form';\r\nimport { SET_INITIALVALUE } from '../../../redux/type';\r\nimport Loading from '../../../Util/Loading';\r\nimport { enrollmentRegex } from '../../ReduxForm/Regex';\r\n\r\nfunction UpdateStudentInfo(props) {\r\n  const [errors, setErrors] = useState(props.errors);\r\n  const [loading, setLoading] = useState(props.loading);\r\n  const [student, setStudent] = useState(props.student);\r\n  const [enrollment, setEnrollment] = useState('');\r\n  const [enError, setEnError] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: SET_INITIALVALUE });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n    setLoading(props.loading);\r\n  }, [props.errors, props.loading]);\r\n\r\n  useEffect(() => {\r\n    setStudent(props.student);\r\n  }, [props.student]);\r\n\r\n  const fetchStudentSetInForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!enrollment.match(enrollmentRegex)) {\r\n      setEnError('Please enter valid enrollment number.');\r\n      return;\r\n    } else {\r\n      setEnError();\r\n    }\r\n    dispatch({ type: SET_INITIALVALUE });\r\n    dispatch(destroy('StudentForm'));\r\n    props.getGlobalStudent(enrollment);\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={fetchStudentSetInForm} className=\"mb-3\">\r\n        <div className=\"from-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Admin Email Address\"\r\n            onChange={(e) => setEnrollment(e.target.value)}\r\n          ></input>\r\n          <label\r\n            className=\"error\"\r\n            dangerouslySetInnerHTML={{ __html: enError }}\r\n          ></label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success\" disabled={loading}>\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      {loading ? (\r\n        <Loading />\r\n      ) : student ? (\r\n        <>\r\n          <ModelEditProfile user={student} />\r\n          <h2>Student Found</h2>\r\n          <div>\r\n            <strong>Enrollment: </strong>\r\n            {student.enrollment}\r\n          </div>\r\n          <div>\r\n            <strong>Name: </strong>\r\n            {`${student.first_name} ${student.middle_name} ${student.last_name}`}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success btn-lg mt-3\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#edit_profile\"\r\n          >\r\n            <i className=\"fa fa-edit\"></i> Edit Student Profile\r\n          </button>\r\n        </>\r\n      ) : (\r\n        errors && (\r\n          <div className=\"alert alert-danger\" style={{ textAlign: 'center' }}>\r\n            {errors.message}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.Data.studentErrors,\r\n  student: state.Data.student,\r\n  loading: state.Data.studentLoading,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  getGlobalStudent,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateStudentInfo);\r\n","import { CLEAR_ERRORS, LOADING_UI, SET_ADMIN_ERROR, SET_DATA_ADMIN, SET_DATA_STUDENT, SET_ERRORS, SET_GLOBAL_ADMIN_LOADING, SET_GLOBAL_STUDENT_LOADING, SET_INITIALVALUE, SET_OPERATION_SUCCESS, SET_STUDENT_ERROR, STOP_GLOBAL_ADMIN_LOADING, STOP_GLOBAL_STUDENT_LOADING, STOP_LOADING_UI } from \"../type\";\r\nimport axios from 'axios'\r\nimport { getUserData } from \"./userAction\";\r\n\r\n\r\nexport const getGlobalStudent = (enrollment) =>async (dispatch) => {\r\n  console.log(\" getGlobalStudent\")\r\n  \r\n  dispatch({ type: SET_INITIALVALUE });\r\n  dispatch({ type: SET_GLOBAL_STUDENT_LOADING });\r\n  axios.get(`/api/admin/request/student?enrollment=${enrollment}`)\r\n    .then(res => {\r\n      console.log(res.data)\r\n      dispatch({\r\n        type: SET_DATA_STUDENT,\r\n        data: res.data.student\r\n      })\r\n      dispatch({ type: STOP_GLOBAL_STUDENT_LOADING });\r\n    })\r\n    .catch(err => {\r\n      console.error(err.response.data)\r\n      dispatch({\r\n        type: SET_STUDENT_ERROR,\r\n        payload: err.response.data\r\n      })\r\n      dispatch({type:STOP_GLOBAL_STUDENT_LOADING})\r\n    })\r\n\r\n}\r\n\r\nexport const getGlobalAdmin = (email) => (dispatch) => {\r\n  dispatch({ type: SET_INITIALVALUE });\r\n  dispatch({ type: SET_GLOBAL_ADMIN_LOADING });\r\n  axios.get(`/api/admin/sshead/searchAdmin?email=${email}`)\r\n    .then(res => {   \r\n      dispatch({\r\n        type: SET_DATA_ADMIN,\r\n        data: res.data.admin\r\n      })\r\n      dispatch({ type: STOP_GLOBAL_ADMIN_LOADING });\r\n    })\r\n    .catch(err => {\r\n      console.error(err.response.data)\r\n      dispatch({\r\n        type: SET_ADMIN_ERROR,\r\n        payload: err.response.data\r\n      })\r\n      dispatch({type:STOP_GLOBAL_ADMIN_LOADING})\r\n    })\r\n\r\n} \r\n\r\nexport const updateGLobalAdmin = (formData)  => (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n  dispatch({ type: LOADING_UI });\r\n  const config = {\r\n    header: { \"content-type\": \"multipart/form-data\" },\r\n  };\r\n  axios\r\n    .post(\"/api/admin/sshead/updateAdmin\", formData, config)\r\n    .then((res) => {\r\n      dispatch(getUserData(\"ADMIN\"));\r\n      dispatch({ type: SET_OPERATION_SUCCESS, payload: res.data.message });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data.message,\r\n      });\r\n    });\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { connect,useDispatch } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Loading from \"../../Util/Loading\";\r\nimport {\r\n  textInput,\r\n  selectInput,\r\n  ImageInput,\r\n  scrollToFirstError,\r\n} from \"../ReduxForm/form\";\r\nimport {\r\n  GENDER,\r\n  ADMIN_ROLE,\r\n  BRANCH_YEAR,\r\n  COUNTRY,\r\n  BLOOD_GROOP,\r\n  BRANCH_BE,\r\n  BRANCH_PDDC,\r\n  BRANCH_PG,\r\n  COURSE,\r\n  BRANCH_MCA\r\n} from \"./data\";\r\nimport { CLEAR_ERRORS } from \"../../redux/type\"\r\nimport validate from \"./AdminFormValidate\";\r\n\r\n\r\n\r\nconst EditAdminForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit} = props;\r\n  \r\n  const [BRANCH, setBRANCH] = useState({ \"Please Select Course First\": \"\" });\r\n  useEffect(() => {\r\n    onCourseChange({ target: { value: props.initialValues.course } });\r\n    return () => {\r\n      dispatch({\r\n        type: CLEAR_ERRORS\r\n      })\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const onCourseChange = (e) => {\r\n    switch (e.target.value) {\r\n      case 'BE':\r\n        setBRANCH(BRANCH_BE);\r\n        break;\r\n      case 'PDDC':\r\n        setBRANCH(BRANCH_PDDC);\r\n        break;\r\n      case 'PG':\r\n        setBRANCH(BRANCH_PG);\r\n        break;\r\n      case 'MCA':\r\n        setBRANCH(BRANCH_MCA);\r\n        break;\r\n      default:\r\n        setBRANCH({ 'Please Select Course First': '' });\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <Field\r\n          type=\"text\"\r\n          name=\"faculty_id\"\r\n          label=\"Faculty Id:\"\r\n          placeholder=\"Enter your faculty Id\"\r\n          component={textInput}\r\n          require\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              label=\"First Name:\"\r\n              placeholder=\"Enter First Name\"\r\n              component={textInput}\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              type=\"text\"\r\n              name=\"middle_name\"\r\n              label=\"Middle Name:\"\r\n              placeholder=\"Enter Middle Name\"\r\n              component={textInput}\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              label=\"Last Name:\"\r\n              placeholder=\"Enter Last Name\"\r\n              component={textInput}\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"gender\"\r\n              label=\"Gender:\"\r\n              placeholder=\"Select Gender\"\r\n              component={selectInput}\r\n              options={GENDER}\r\n              data-live-search=\"on\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"role\"\r\n              label=\"Role:\"\r\n              placeholder=\"Select Role\"\r\n              component={selectInput}\r\n              options={ADMIN_ROLE}\r\n              data-live-search=\"on\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              type=\"text\"\r\n              name=\"designation\"\r\n              label=\"Designation:\"\r\n              placeholder=\"Enter Designation\"\r\n              component={textInput}\r\n              require\r\n                />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"branch_year\"\r\n              label=\"Branch Year:\"\r\n              placeholder=\"Select Branch year\"\r\n              component={selectInput}\r\n              options={BRANCH_YEAR}\r\n              data-live-search=\"on\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"course\"\r\n              label=\"Course:\"\r\n              placeholder=\"Select Course\"\r\n              component={selectInput}\r\n              options={COURSE}\r\n              onChange={onCourseChange}\r\n              data-live-search=\"on\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"branch\"\r\n              label=\"Branch:\"\r\n              placeholder=\"Select Branch\"\r\n              component={selectInput}\r\n              options={BRANCH}\r\n              data-live-search=\"on\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      <div className=\"form-group\">\r\n        <Field\r\n          type=\"email\"\r\n          name=\"email\"\r\n          label=\"Email Id:\"\r\n          placeholder=\"Enter Email Id\"\r\n          component={textInput}\r\n          require\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <Field\r\n          type=\"number\"\r\n          name=\"contact\"\r\n          label=\"Contact No:\"\r\n          placeholder=\"Enter Contact Number\"\r\n          component={textInput}\r\n          maxLength=\"10\"\r\n          require\r\n        />\r\n      </div>\r\n     \r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"resident_address\">\r\n          Resident Address: <font color=\"red\">*</font>\r\n        </label>\r\n\r\n        <Field\r\n          type=\"text\"\r\n          name=\"re_add_l1\"\r\n          component={textInput}\r\n          className=\"form-control mt-3\"\r\n          placeholder=\"Address Line 1\"\r\n        />\r\n        <Field\r\n          type=\"text\"\r\n          name=\"re_add_l2\"\r\n          component={textInput}\r\n          className=\"form-control mt-1\"\r\n          placeholder=\"Address Line 2\"\r\n        />\r\n        <Field\r\n          type=\"text\"\r\n          name=\"re_add_city\"\r\n          component={textInput}\r\n          className=\"form-control mt-1\"\r\n          placeholder=\"City\"\r\n        />\r\n        <Field\r\n          type=\"text\"\r\n          name=\"re_add_state\"\r\n          component={textInput}\r\n          className=\"form-control mt-1\"\r\n          placeholder=\"State\"\r\n        />\r\n        <Field\r\n          type=\"number\"\r\n          name=\"re_add_pin_code\"\r\n          component={textInput}\r\n          className=\"form-control mt-1\"\r\n          placeholder=\"Postal Code\"\r\n        />\r\n\r\n        <Field\r\n          name=\"re_add_country\"\r\n          placeholder=\"Select Country\"\r\n          className=\"form-control mt-1\"\r\n          component={selectInput}\r\n          options={COUNTRY}\r\n          data-live-search=\"on\"\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              type=\"date\"\r\n              name=\"date_of_birth\"\r\n              label=\"Date of Birth:\"\r\n              component={textInput}\r\n              min=\"1900-01-01\"\r\n              max=\"2000-12-31\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"blood_group\"\r\n              label=\"Blood Group:\"\r\n              placeholder=\"Select Blood Group\"\r\n              component={selectInput}\r\n              options={BLOOD_GROOP}\r\n              data-live-search=\"on\"\r\n              require\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n     <div className=\"form-group mt-3 text-center\">\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n     \r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\n\r\nconst AdminRegistrationForm = reduxForm({\r\n                              form: \"AdminForm\",\r\n                              validate: validate,\r\n                              onSubmitFail: scrollToFirstError,\r\n                            })(EditAdminForm);\r\n\r\n\r\nexport default connect(mapStateToProps)(AdminRegistrationForm);\r\n","import React, { useEffect ,useState} from 'react'\r\nimport { updateGLobalAdmin } from '../../redux/actions/dataAction'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport {destroy} from 'redux-form'\r\nimport Loading from '../../Util/Loading'\r\nimport EditAdminForm from './EditAdminForm'\r\nimport { CLEAR_ERRORS } from '../../redux/type'\r\n\r\nfunction ModelEditAdminProfile(props) {\r\n    const dispatch = useDispatch();\r\n    const [user, setUser] = useState(props.user)\r\n    const { loading, errors, success } = props.UI\r\n    useEffect(() => {\r\n        return () => {\r\n          dispatch(destroy('AdminForm'));\r\n        };\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        setUser(props.user)\r\n    }, [loading, errors, success,props.user])\r\n    \r\n\r\n    const handleSubmit = async (values) => {\r\n        \r\n\r\n        const formData = new FormData();\r\n        Object.keys(values).forEach((field, index) => {\r\n            formData.append(field, values[field]);\r\n        });\r\n\r\n        await props.updateGLobalAdmin(formData);\r\n        setTimeout(() => {\r\n            dispatch({ type: CLEAR_ERRORS })\r\n            document.getElementById('profile-model-close').click()\r\n        }, 3000)\r\n\r\n    };\r\n    return (\r\n\r\n        <div class=\"modal fade\" id=\"edit_admin_profile\"  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"edit_profile_title\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h4 class=\"modal-title\" id=\"edit_profile_title\">Edit Admin Profile</h4>\r\n                        <button type=\"button\" id=\"profile-model-close\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <EditAdminForm  onSubmit={handleSubmit} initialValues={user} />\r\n                        {loading === true ?\r\n                            <Loading /> :\r\n                            errors.error && (\r\n                                <div class=\"alert alert-danger\"\r\n                                    style={{ textAlign: \"center\" }}\r\n                                >\r\n                                    There's Might Be Some Server Error\r\n                                </div>)\r\n                        }\r\n                        {\r\n                            success &&\r\n                            <div class=\"alert alert-success\"\r\n                                style={{ textAlign: \"center\" }}\r\n                            >\r\n                             Admin Profile Changed SucccesFully\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n});\r\nexport default connect(mapStateToProps, { updateGLobalAdmin })(ModelEditAdminProfile)","import React, { useState, useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\n\r\nimport { getGlobalAdmin } from '../../../redux/actions/dataAction';\r\nimport { destroy } from 'redux-form';\r\nimport { SET_INITIALVALUE } from '../../../redux/type';\r\nimport ModelEditAdminProfile from '../../Registration/ModelEditAdminProfile';\r\nimport { emailRegex } from '../../ReduxForm/Regex';\r\nimport Loading from '../../../Util/Loading';\r\n\r\nfunction UpdateAdminInfo(props) {\r\n  const [errors, setErrors] = useState(props.errors);\r\n  const [loading, setLoading] = useState(props.loading);\r\n  const [admin, setAdmin] = useState(props.admin);\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: SET_INITIALVALUE });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setErrors(props.errors);\r\n    setLoading(props.loading);\r\n  }, [props.errors, props.loading]);\r\n\r\n  useEffect(() => {\r\n    setAdmin(props.admin);\r\n  }, [props.admin]);\r\n\r\n  const fetchAdminSetInForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.match(emailRegex)) {\r\n      setEmailError('Please enter valid email address.');\r\n      return;\r\n    } else {\r\n      setEmailError();\r\n    }\r\n    dispatch({ type: SET_INITIALVALUE });\r\n    dispatch(destroy('AdminForm'));\r\n    props.getGlobalAdmin(email);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={fetchAdminSetInForm} className=\"mb-3\">\r\n        <div className=\"from-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Admin Email Address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></input>\r\n          <label\r\n            className=\"error\"\r\n            dangerouslySetInnerHTML={{ __html: emailError }}\r\n          ></label>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success\" disabled={loading}>\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      {loading ? (\r\n        <Loading />\r\n      ) : admin ? (\r\n        <>\r\n          <ModelEditAdminProfile user={admin} />\r\n          <h2>Admin Found</h2>\r\n          <div>\r\n            <strong>Email: </strong>\r\n            {admin.email}\r\n          </div>\r\n          <div>\r\n            <strong>Name: </strong>\r\n            {`${admin.first_name} ${admin.middle_name} ${admin.last_name}`}\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-success btn-lg mt-3\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#edit_admin_profile\"\r\n          >\r\n            <i className=\"fa fa-edit\"></i> Edit Admin Profile\r\n          </button>\r\n        </>\r\n      ) : (\r\n        errors && (\r\n          <div className=\"alert alert-danger\" style={{ textAlign: 'center' }}>\r\n            {errors.message}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.Data.adminErrors,\r\n  admin: state.Data.admin,\r\n  loading: state.Data.adminLoading,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  getGlobalAdmin,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(UpdateAdminInfo);\r\n","import React, { useState } from 'react';\r\nimport UpdateStudentInfo from './update_student_info';\r\nimport UpdateAdminInfo from './update_admin_info';\r\n\r\nfunction UpdateUserInfo() {\r\n  const initialValue = 'admin';\r\n  const [profile, setProfile] = useState(initialValue);\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"w-50 mx-auto\">\r\n            <h1>Edit </h1>\r\n            <div className=\"from-group mb-4\">\r\n              <select\r\n                className=\"form-control\"\r\n                onChange={(e) => setProfile(e.target.value)}\r\n              >\r\n                <option value=\"admin\">Admin</option>\r\n                <option value=\"student\">Student</option>\r\n              </select>\r\n            </div>\r\n\r\n            {profile === 'student' && <UpdateStudentInfo />}\r\n            {profile === 'admin' && <UpdateAdminInfo />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateUserInfo;\r\n"],"sourceRoot":""}