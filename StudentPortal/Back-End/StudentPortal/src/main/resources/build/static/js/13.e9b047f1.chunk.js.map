{"version":3,"sources":["Components/ReduxForm/form.js","Components/Login/login.js"],"names":["textInput","formField","input","meta","params","className","getClassName","renderLabel","label","name","id","renderError","touched","error","hasError","selectInput","options","value","disabled","hidden","placeholder","renderOption","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","ImageInput","state","lableImg","onFileChange","e","a","props","target","files","test","type","setState","size","val","onChange","this","src","default","alt","accept","style","left","message","React","Component","htmlFor","require","required","color","dangerouslySetInnerHTML","__html","Object","keys","map","key","scrollToFirstError","el","document","querySelector","focus","position","getBoundingClientRect","top","documentElement","scrollTop","window","scrollTo","behavior","LoginForm","reduxForm","form","initialValues","validate","values","errors","username","password","loginUser","history","UI","loading","useState","setLabel","setPlaceholder","onSubmit","handleSubmit","string","textAlign","component","Student","Admin","console","log","to","connect"],"mappings":"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","file":"static/js/13.e9b047f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const textInput = (formField) => {\r\n  const { input, meta, ...params } = formField;\r\n  const className = getClassName(meta, params.className);\r\n  return (\r\n    <>\r\n      {renderLabel(params.label, input.name, params)}\r\n      <input className={className} {...input} id={input.name} {...params} />\r\n      {renderError(meta)}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getClassName = ({ touched, error }, className = 'form-control') => {\r\n  const hasError = touched && error;\r\n  if (hasError) {\r\n    className += ' error';\r\n  }\r\n  return className;\r\n};\r\n\r\nexport const selectInput = (formField) => {\r\n  const { input, meta, options, ...params } = formField;\r\n  const className = getClassName(meta, params.className);\r\n  return (\r\n    <>\r\n      {renderLabel(params.label, input.name, params)}\r\n      <select className={className} {...input} id={input.name} {...params}>\r\n        <option value=\"\" disabled hidden>\r\n          {params.placeholder}\r\n        </option>\r\n        {renderOption(options)}\r\n      </select>\r\n      {renderError(meta)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getBase64 = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n\r\nexport class ImageInput extends React.Component {\r\n  state = { error: '', lableImg: null };\r\n\r\n  onFileChange = async (e) => {\r\n    const { input } = this.props;\r\n    const file = e.target.files[0];\r\n    var error = '';\r\n    if (file) {\r\n      if (!/^image/.test(file.type)) {\r\n        error = `Only jpg,jpeg,png file type allow.`;\r\n        this.setState({ error });\r\n        return false;\r\n      } else if (file.size > 512000) {\r\n        error = `File size must not exceed 500 KB.`;\r\n        this.setState({ error });\r\n        return false;\r\n      }\r\n      this.setState({ error });\r\n      const val = await getBase64(file);\r\n      //for lable value of input image i'have change state\r\n      this.setState({\r\n        ...this.state,\r\n        lableImg: val,\r\n      });\r\n      //this is onother change for setting form data 'cause backend Excepting multipar-form data\r\n      input.onChange(file);\r\n    } else {\r\n      input.onChange(null);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { input, meta, ...params } = this.props;\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <label>\r\n          <img\r\n            src={this.state.lableImg || params.default}\r\n            className={params.className || `upload-${input.name}`}\r\n            alt=\"Student Img\"\r\n          />\r\n          <span className=\"btn btn-primary btn-lg btn-block mx-auto\">\r\n            {params.placeholder}\r\n          </span>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            className=\"form-control invisible position-absolute\"\r\n            style={{ left: '0' }}\r\n            id={input.name}\r\n            onChange={this.onFileChange}\r\n          />\r\n          {renderError(meta)}\r\n          {error && <label className=\"error\">{error}</label>}\r\n        </label>\r\n        <p>{params.message}</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderLabel = (label, htmlFor, { require, required }) => {\r\n  return (\r\n    label && (\r\n      <label htmlFor={htmlFor}>\r\n        {label} {(required || require) && <font color=\"red\">*</font>}\r\n      </label>\r\n    )\r\n  );\r\n};\r\n\r\nconst renderError = ({ touched, error }) => {\r\n  return (\r\n    touched &&\r\n    error && (\r\n      <label\r\n        className=\"error\"\r\n        dangerouslySetInnerHTML={{ __html: error }}\r\n      ></label>\r\n    )\r\n  );\r\n};\r\n\r\nconst renderOption = (options) => {\r\n  return Object.keys(options).map((key) => (\r\n    <option key={options[key]} value={options[key]}>\r\n      {key}\r\n    </option>\r\n  ));\r\n};\r\n\r\nexport const scrollToFirstError = () => {\r\n  const el = document.querySelector('input.error');\r\n  if (el) {\r\n    el.focus();\r\n    const position =\r\n      el.getBoundingClientRect().top + document.documentElement.scrollTop;\r\n    const offset = 50;\r\n    window.scrollTo({ top: position - offset, behavior: 'smooth' });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport Loading from \"../../Util/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../redux/actions/userAction\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { selectInput, textInput } from \"../ReduxForm/form\";\r\n\r\n\r\nfunction Login(props) {\r\n  const { loginUser, history } = props;\r\n  const { loading, errors } = props.UI;\r\n  const [label, setLabel] = useState(\"Enrollment No:\");\r\n  const [placeholder, setPlaceholder] = useState(\"Enter Your Enrollment No...\");\r\n\r\n  const onRoleChange = (e) => {\r\n    const type = e.target.value;\r\n    if (type === \"ADMIN\") {\r\n      setPlaceholder(\"Enter Your Id...\");\r\n      setLabel(\"Department Id:\");\r\n    } else {\r\n      setPlaceholder(\"Enter Your Enrollment No...\");\r\n      setLabel(\"Enrollment No:\");\r\n    }\r\n    console.log(e);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    loginUser(values, history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-lg-4 mx-auto mx-auto\">\r\n          <form\r\n            id=\"loginForm\"\r\n            className=\"regForm\"\r\n            onSubmit={props.handleSubmit(onSubmit)}\r\n          >\r\n            <h2 className=\"form-title text-center\">Login</h2>\r\n\r\n            {(errors.error || errors.string) && (\r\n              <div\r\n                className=\"comment alert alert-danger\"\r\n                style={{ textAlign: \"center\" }}\r\n                id=\"error_message\"\r\n              >\r\n                <strong>Invalid Credentials</strong>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <Field\r\n                name=\"type\"\r\n                label=\"Role:\"\r\n                placeholder=\"Select Role\"\r\n                component={selectInput}\r\n                options={{\r\n                  Student: \"STUDENT\",\r\n                  Admin: \"ADMIN\",\r\n                }}\r\n                onChange={onRoleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"username\"\r\n                label={label}\r\n                placeholder={placeholder}\r\n                component={textInput}\r\n                require=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Field\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password:\"\r\n                placeholder=\"Enter Password.\"\r\n                component={textInput}\r\n                require=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Link to=\"forgotPassword\">Forgot Password?</Link>\r\n            </div>\r\n\r\n            <div className=\"form-group text-center\">\r\n              {loading ? (\r\n                <Loading></Loading>\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                  Login\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.type) {\r\n    errors.type = \"Please Select Role\";\r\n  }\r\n  if (!values.username) {\r\n    errors.username = \"Please Enter Username\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Please Enter Password\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\n\r\nconst LoginForm = reduxForm({\r\n  form: \"loginForm\",\r\n  initialValues: { type: \"STUDENT\" },\r\n  validate,\r\n})(Login);\r\n\r\nexport default connect(mapStateToProps, { loginUser })(LoginForm);\r\n"],"sourceRoot":""}