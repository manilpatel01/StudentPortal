{"version":3,"sources":["Components/Login/login.js"],"names":["LoginForm","reduxForm","form","initialValues","type","validate","values","errors","username","password","props","loginUser","history","UI","loading","useState","label","setLabel","placeholder","setPlaceholder","className","id","onSubmit","handleSubmit","error","string","style","textAlign","name","component","selectInput","options","Student","Admin","onChange","e","target","value","console","log","textInput","require","to","connect","state"],"mappings":"sOAyGA,IAkBMA,EAAYC,YAAU,CAC1BC,KAAM,YACNC,cAAe,CAAEC,KAAM,WACvBC,SArBe,SAACC,GAChB,IAAMC,EAAS,GAUf,OATKD,EAAOF,OACVG,EAAOH,KAAO,sBAEXE,EAAOE,WACVD,EAAOC,SAAW,yBAEfF,EAAOG,WACVF,EAAOE,SAAW,yBAEbF,IAOSN,EAjHlB,SAAeS,GAAQ,IACbC,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,QADC,EAEQF,EAAMG,GAA1BC,EAFY,EAEZA,QAASP,EAFG,EAEHA,OAFG,EAGMQ,mBAAS,kBAHf,mBAGbC,EAHa,KAGNC,EAHM,OAIkBF,mBAAS,+BAJ3B,mBAIbG,EAJa,KAIAC,EAJA,KAsBpB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qCACb,0BACEC,GAAG,YACHD,UAAU,UACVE,SAAUZ,EAAMa,cAXT,SAACjB,GAChBK,EAAUL,EAAQM,OAYV,wBAAIQ,UAAU,0BAAd,UAEEb,EAAOiB,OAASjB,EAAOkB,SACvB,yBACEL,UAAU,6BACVM,MAAO,CAAEC,UAAW,UACpBN,GAAG,iBAEH,wDAGJ,yBAAKD,UAAU,cACb,kBAAC,IAAD,CACEQ,KAAK,OACLZ,MAAM,QACNE,YAAY,cACZW,UAAWC,IACXC,QAAS,CACPC,QAAS,UACTC,MAAO,SAETC,SA9CO,SAACC,GAEP,UADAA,EAAEC,OAAOC,OAEpBlB,EAAe,oBACfF,EAAS,oBAETE,EAAe,+BACfF,EAAS,mBAEXqB,QAAQC,IAAIJ,OAwCJ,yBAAKf,UAAU,cACb,kBAAC,IAAD,CACEhB,KAAK,OACLwB,KAAK,WACLZ,MAAOA,EACPE,YAAaA,EACbW,UAAWW,IACXC,QAAQ,UAGZ,yBAAKrB,UAAU,cACb,kBAAC,IAAD,CACEhB,KAAK,WACLwB,KAAK,WACLZ,MAAM,YACNE,YAAY,kBACZW,UAAWW,IACXC,QAAQ,UAGZ,yBAAKrB,UAAU,cACb,kBAAC,IAAD,CAAMsB,GAAG,kBAAT,qBAGF,yBAAKtB,UAAU,0BACZN,EACC,kBAAC,IAAD,MAEA,4BAAQV,KAAK,SAASgB,UAAU,mBAAhC,iBAoCDuB,uBAVS,SAACC,GAAD,MAAY,CAClC/B,GAAI+B,EAAM/B,MAS4B,CAAEF,eAA3BgC,CAAwC3C","file":"static/js/15.c43681d3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport Loading from \"../../Util/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../redux/actions/userAction\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { selectInput, textInput } from \"../ReduxForm/form\";\r\n\r\n\r\nfunction Login(props) {\r\n  const { loginUser, history } = props;\r\n  const { loading, errors } = props.UI;\r\n  const [label, setLabel] = useState(\"Enrollment No:\");\r\n  const [placeholder, setPlaceholder] = useState(\"Enter Your Enrollment No...\");\r\n\r\n  const onRoleChange = (e) => {\r\n    const type = e.target.value;\r\n    if (type === \"ADMIN\") {\r\n      setPlaceholder(\"Enter Your Id...\");\r\n      setLabel(\"Department Id:\");\r\n    } else {\r\n      setPlaceholder(\"Enter Your Enrollment No...\");\r\n      setLabel(\"Enrollment No:\");\r\n    }\r\n    console.log(e);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    loginUser(values, history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-lg-4 mx-auto mx-auto\">\r\n          <form\r\n            id=\"loginForm\"\r\n            className=\"regForm\"\r\n            onSubmit={props.handleSubmit(onSubmit)}\r\n          >\r\n            <h2 className=\"form-title text-center\">Login</h2>\r\n\r\n            {(errors.error || errors.string) && (\r\n              <div\r\n                className=\"comment alert alert-danger\"\r\n                style={{ textAlign: \"center\" }}\r\n                id=\"error_message\"\r\n              >\r\n                <strong>Invalid Credentials</strong>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <Field\r\n                name=\"type\"\r\n                label=\"Role:\"\r\n                placeholder=\"Select Role\"\r\n                component={selectInput}\r\n                options={{\r\n                  Student: \"STUDENT\",\r\n                  Admin: \"ADMIN\",\r\n                }}\r\n                onChange={onRoleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Field\r\n                type=\"text\"\r\n                name=\"username\"\r\n                label={label}\r\n                placeholder={placeholder}\r\n                component={textInput}\r\n                require=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Field\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Password:\"\r\n                placeholder=\"Enter Password.\"\r\n                component={textInput}\r\n                require=\"true\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Link to=\"forgotPassword\">Forgot Password?</Link>\r\n            </div>\r\n\r\n            <div className=\"form-group text-center\">\r\n              {loading ? (\r\n                <Loading></Loading>\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                  Login\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.type) {\r\n    errors.type = \"Please Select Role\";\r\n  }\r\n  if (!values.username) {\r\n    errors.username = \"Please Enter Username\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Please Enter Password\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n});\r\n\r\nconst LoginForm = reduxForm({\r\n  form: \"loginForm\",\r\n  initialValues: { type: \"STUDENT\" },\r\n  validate,\r\n})(Login);\r\n\r\nexport default connect(mapStateToProps, { loginUser })(LoginForm);\r\n"],"sourceRoot":""}